{"version":3,"sources":["components/Phonebook.js","components/Contacts.js","components/Finder.js","App.js","index.js"],"names":["Phonebook","onSubmit","useState","name","setName","number","setNumber","e","preventDefault","type","value","onChange","currentTarget","placeholder","Contacts","contacts","onDeleteContact","map","id","onClick","Filter","App","setContacts","filter","setFilter","useEffect","JSON","parse","localStorage","getItem","setItem","stringify","contact","shortid","generate","findContactName","find","item","toLowerCase","сontactFinder","alert","Finder","normalizeName","includes","showContact","contactId","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wPAEe,SAASA,EAAT,GAAkC,IAAbC,EAAY,EAAZA,SAAY,EACtBC,mBAAS,IADa,mBACvCC,EADuC,KACjCC,EADiC,OAElBF,mBAAS,IAFS,mBAEvCG,EAFuC,KAE/BC,EAF+B,KAqB9C,OACE,8BACE,uBAAML,SAXW,SAACM,GACpBA,EAAEC,iBAEFP,EAASE,EAAME,GAEfC,EAAU,IACVF,EAAQ,KAKN,UACE,uBACEK,KAAK,OACLC,MAAOP,EACPQ,SAvBiB,SAACJ,GACxBH,EAAQG,EAAEK,cAAcF,QAuBlBG,YAAY,aAEd,uBACEJ,KAAK,QACLC,MAAOL,EACPM,SAzBmB,SAACJ,GAC1BD,EAAUC,EAAEK,cAAcF,QAyBpBG,YAAY,eAEd,wBAAQJ,KAAK,SAAb,8BCpCR,IAceK,EAdE,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAUC,EAAb,EAAaA,gBAAb,OACf,6BACGD,EAASE,KAAI,gBAAGC,EAAH,EAAGA,GAAIf,EAAP,EAAOA,KAAME,EAAb,EAAaA,OAAb,OACZ,+BACE,4BAAIF,IACJ,4BAAIE,IACJ,wBAAQI,KAAK,SAASU,QAAS,kBAAMH,EAAgBE,IAArD,sBAHOA,SCEAE,EAPA,SAAC,GAAD,IAAGV,EAAH,EAAGA,MAAOC,EAAV,EAAUA,SAAV,OACb,0DAEE,uBAAOF,KAAK,OAAOC,MAAOA,EAAOC,SAAUA,Q,gBCQhC,SAASU,IAAO,IAAD,EACInB,mBAAS,CACvC,CAAEgB,GAAI,OAAQf,KAAM,gBAAiBE,OAAQ,aAC7C,CAAEa,GAAI,OAAQf,KAAM,iBAAkBE,OAAQ,aAC9C,CAAEa,GAAI,OAAQf,KAAM,gBAAiBE,OAAQ,aAC7C,CAAEa,GAAI,OAAQf,KAAM,iBAAkBE,OAAQ,eALpB,mBACrBU,EADqB,KACXO,EADW,OAOApB,mBAAS,IAPT,mBAOrBqB,EAPqB,KAObC,EAPa,KAS5BC,qBAAU,WACRH,EAAYI,KAAKC,MAAMC,aAAaC,QAAQ,gBAC3C,IAEHJ,qBAAU,WACRG,aAAaE,QAAQ,WAAYJ,KAAKK,UAAUhB,MAC/C,CAACA,IAiCJ,OACE,gCACE,2CACA,cAACf,EAAD,CAAWC,SAlCI,SAACE,EAAME,GACxB,IAAM2B,EAAU,CACdd,GAAIe,IAAQC,WACZ/B,OACAE,UAEI8B,EA5BY,SAACpB,EAAUiB,GAAX,OACpBjB,EAASqB,MACP,SAACC,GAAD,OAAUA,EAAKlC,KAAKmC,gBAAkBN,EAAQ7B,KAAKmC,iBA0B3BC,CAAcxB,EAAUiB,GAE5CA,EAAQ7B,OACVgC,EACIK,MAAM,GAAD,OAAIR,EAAQ7B,KAAZ,iCACLmB,EAAY,CAACU,GAAF,mBAAcjB,SAyB7B,0CACA,cAAC0B,EAAD,CAAQ/B,MAAOa,EAAQZ,SAtBP,SAACJ,GACnBiB,EAAUjB,EAAEK,cAAcF,UAsBxB,cAAC,EAAD,CAAUK,SAnBM,WAClB,IAAM2B,EAAgBnB,EAAOe,cAE7B,OAAOvB,EAASQ,QAAO,SAACS,GAAD,OACrBA,EAAQ7B,KAAKmC,cAAcK,SAASD,MAehBE,GAAe5B,gBAXjB,SAAC6B,GACrBvB,EAAYP,EAASQ,QAAO,SAACS,GAAD,OAAaA,EAAQd,KAAO2B,YClD5DC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC3B,EAAD,MAEF4B,SAASC,eAAe,W","file":"static/js/main.56d31f59.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\n\r\nexport default function Phonebook({ onSubmit }) {\r\n  const [name, setName] = useState(\"\");\r\n  const [number, setNumber] = useState(\"\");\r\n\r\n  const handleChangeName = (e) => {\r\n    setName(e.currentTarget.value);\r\n  };\r\n\r\n  const handleChangeNumber = (e) => {\r\n    setNumber(e.currentTarget.value);\r\n  };\r\n\r\n  const onAddContact = (e) => {\r\n    e.preventDefault();\r\n\r\n    onSubmit(name, number);\r\n\r\n    setNumber(\"\");\r\n    setName(\"\");\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <form onSubmit={onAddContact}>\r\n        <input\r\n          type=\"text\"\r\n          value={name}\r\n          onChange={handleChangeName}\r\n          placeholder=\"Add name\"\r\n        ></input>\r\n        <input\r\n          type=\"phone\"\r\n          value={number}\r\n          onChange={handleChangeNumber}\r\n          placeholder=\"Add number\"\r\n        ></input>\r\n        <button type=\"submit\">Add contact</button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\n// class Phonebook extends Component {\r\n//   state = {\r\n//     name: '',\r\n//     number: '',\r\n//   };\r\n\r\n//   handleChangeName = e => {\r\n//     this.setState({ name: e.currentTarget.value });\r\n//   };\r\n\r\n//   handleChangeNumber = e => {\r\n//     this.setState({ number: e.currentTarget.value });\r\n//   };\r\n\r\n//   onAddContact = e => {\r\n//     e.preventDefault();\r\n\r\n//     this.props.onSubmit(this.state.name, this.state.number);\r\n\r\n//     this.setState({ name: '', number: '' });\r\n//   };\r\n\r\n//   render() {\r\n// return (\r\n//   <div>\r\n//     <form onSubmit={this.onAddContact}>\r\n//       <input\r\n//         type=\"text\"\r\n//         value={this.state.name}\r\n//         onChange={this.handleChangeName}\r\n//         placeholder=\"Add name\"\r\n//       ></input>\r\n//       <input\r\n//         type=\"phone\"\r\n//         value={this.state.number}\r\n//         onChange={this.handleChangeNumber}\r\n//         placeholder=\"Add number\"\r\n//       ></input>\r\n//       <button type=\"submit\">Add contact</button>\r\n//     </form>\r\n//   </div>\r\n// );\r\n//   }\r\n// }\r\n\r\n// export default Phonebook;\r\n","import React from 'react';\r\n\r\nconst Contacts = ({ contacts, onDeleteContact }) => (\r\n  <ul>\r\n    {contacts.map(({ id, name, number }) => (\r\n      <li key={id}>\r\n        <p>{name}</p>\r\n        <p>{number}</p>\r\n        <button type=\"button\" onClick={() => onDeleteContact(id)}>\r\n          Delete\r\n        </button>\r\n      </li>\r\n    ))}\r\n  </ul>\r\n);\r\n\r\nexport default Contacts;\r\n","const Filter = ({ value, onChange }) => (\r\n  <label>\r\n    Find contacts by name\r\n    <input type=\"text\" value={value} onChange={onChange}></input>\r\n  </label>\r\n);\r\n\r\nexport default Filter;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Phonebook from \"./components/Phonebook\";\r\nimport Contacts from \"./components/Contacts\";\r\nimport Finder from \"./components/Finder\";\r\nimport shortid from \"shortid\";\r\n\r\nconst сontactFinder = (contacts, contact) =>\r\n  contacts.find(\r\n    (item) => item.name.toLowerCase() === contact.name.toLowerCase()\r\n  );\r\n\r\nexport default function App() {\r\n  const [contacts, setContacts] = useState([\r\n    { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\r\n    { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\r\n    { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\r\n    { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\r\n  ]);\r\n  const [filter, setFilter] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    setContacts(JSON.parse(localStorage.getItem(\"contacts\")));\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(\"contacts\", JSON.stringify(contacts));\r\n  }, [contacts]);\r\n\r\n  const addContact = (name, number) => {\r\n    const contact = {\r\n      id: shortid.generate(),\r\n      name,\r\n      number,\r\n    };\r\n    const findContactName = сontactFinder(contacts, contact);\r\n\r\n    if (contact.name) {\r\n      findContactName\r\n        ? alert(`${contact.name} is already in contact list!`)\r\n        : setContacts([contact, ...contacts]);\r\n    }\r\n  };\r\n\r\n  const findContact = (e) => {\r\n    setFilter(e.currentTarget.value);\r\n  };\r\n\r\n  const showContact = () => {\r\n    const normalizeName = filter.toLowerCase();\r\n\r\n    return contacts.filter((contact) =>\r\n      contact.name.toLowerCase().includes(normalizeName)\r\n    );\r\n  };\r\n\r\n  const deleteContact = (contactId) => {\r\n    setContacts(contacts.filter((contact) => contact.id !== contactId));\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Phonebook</h2>\r\n      <Phonebook onSubmit={addContact} />\r\n\r\n      <h2>Contacts</h2>\r\n      <Finder value={filter} onChange={findContact} />\r\n      <Contacts contacts={showContact()} onDeleteContact={deleteContact} />\r\n    </div>\r\n  );\r\n}\r\n\r\n// class App extends Component {\r\n//   state = {\r\n// contacts: [\r\n//   { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\r\n//   { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\r\n//   { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\r\n//   { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\r\n// ],\r\n//     filter: '',\r\n//   };\r\n\r\n//   componentDidUpdate(prevProps, prevState) {\r\n//     if (this.state.contacts !== prevState.contacts) {\r\n//       localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\r\n//     }\r\n//   }\r\n\r\n//   componentDidMount() {\r\n//     const contacts = localStorage.getItem('contacts');\r\n//     const parsedContacts = JSON.parse(contacts);\r\n\r\n//     if (parsedContacts) {\r\n//       this.setState({ contacts: parsedContacts });\r\n//     }\r\n//   }\r\n\r\n//   addContact = (name, number) => {\r\n//     const contact = {\r\n//       id: shortid.generate(),\r\n//       name,\r\n//       number,\r\n//     };\r\n\r\n//     const findContactName = сontactFinder(this.state.contacts, contact);\r\n\r\n//     if (contact.name) {\r\n//       findContactName\r\n//         ? alert(`${contact.name} is already in contact list!`)\r\n//         : this.setState(({ contacts }) => ({\r\n//             contacts: [contact, ...contacts],\r\n//           }));\r\n//     }\r\n//   };\r\n\r\n//   findContact = e => {\r\n//     this.setState({ filter: e.currentTarget.value });\r\n//   };\r\n\r\n//   showContact = () => {\r\n//     const { filter, contacts } = this.state;\r\n//     const normalizeName = filter.toLowerCase();\r\n\r\n//     return contacts.filter(contact =>\r\n//       contact.name.toLowerCase().includes(normalizeName),\r\n//     );\r\n//   };\r\n\r\n//   deleteContact = contactId => {\r\n//     this.setState(prevState => ({\r\n//       contacts: prevState.contacts.filter(contact => contact.id !== contactId),\r\n//     }));\r\n//   };\r\n\r\n//   render() {\r\n// return (\r\n//   <div>\r\n//     <h2>Phonebook</h2>\r\n//     <Phonebook onSubmit={this.addContact} />\r\n\r\n//     <h2>Contacts</h2>\r\n//     <Finder value={this.filter} onChange={this.findContact} />\r\n//     <Contacts\r\n//       contacts={this.showContact()}\r\n//       onDeleteContact={this.deleteContact}\r\n//     />\r\n//   </div>\r\n// );\r\n//   }\r\n// }\r\n\r\n// export default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n\r\n"],"sourceRoot":""}